import { ConnectButton } from "@rainbow-me/rainbowkit";
import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import {
  useAccount,
  useConnect,
  useDisconnect,
  useSignMessage,
  useSwitchChain,
} from "wagmi";
import { useState } from "react";
import { base, baseSepolia } from "viem/chains";
import { verifyMessage } from "@wagmi/core";
import { config } from "../wagmi";

const Home: NextPage = () => {
  const account = useAccount();
  const { connectors, connect, status, error } = useConnect();
  const { disconnect } = useDisconnect();
  const { switchChain } = useSwitchChain();
  const { signMessageAsync } = useSignMessage();
  const [signature, setSignature] = useState<`0x${string}` | null>(null);
  const [result, setResult] = useState<boolean | null>(null);

  const handleSignMessage = async () => {
    const signature = await signMessageAsync({
      message: `Signing message from: ${account.address} on chain ${account.chain?.name}`,
    });
    setSignature(signature);
    setResult(null);
  };

  const validateSignature = async () => {
    if (!account.address) return;
    if (!signature) return;

    const result = await verifyMessage(config, {
      address: account.address,
      message: `Signing message from: ${account.address} on chain ${account.chain?.name}`,
      signature,
    });

    console.log(result);
    setResult(result);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>RainbowKit App</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <div>
          <h2>Account</h2>

          <div>
            status: {account.status}
            <br />
            addresses: {JSON.stringify(account.addresses)}
            <br />
            chainId: {account.chainId}
          </div>
        </div>

        <div>
          <h2>Connect</h2>
          <ConnectButton />
          <div>{status}</div>
          <div>{error?.message}</div>
        </div>

        <div>
          <h2>Switch Chain - current chainId: {account.chain?.name}</h2>
          <button onClick={() => switchChain({ chainId: baseSepolia.id })}>
            Switch to Base Sepolia
          </button>
          <button onClick={() => switchChain({ chainId: base.id })}>
            Switch to Base
          </button>
        </div>

        <div>
          <h2>Sign Message</h2>
          <button onClick={handleSignMessage} disabled={!account.address}>
            Sign Message
          </button>
          <button onClick={validateSignature} disabled={!signature}>
            Validate Signature
          </button>
          {result !== null && (
            <div>{result ? "Signature is valid" : "Signature is invalid"}</div>
          )}
        </div>
      </main>

      <footer className={styles.footer}>
        <a href="https://rainbow.me" rel="noopener noreferrer" target="_blank">
          Made with ❤️ by your frens at 🌈
        </a>
      </footer>
    </div>
  );
};

export default Home;
